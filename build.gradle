/*
 *     Copyright 2021-present the original author or authors.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

ext {
    javaVersion = JavaVersion.VERSION_17
    lombokVersion = "1.18.22"
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

configure(subprojects) {
    group = GROUPID
    version = VERSION
}

configure(subprojects) {

    apply plugin: "java-library"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "idea"
    apply plugin: "maven-publish"

    sourceCompatibility = "$javaVersion"
    targetCompatibility = "$javaVersion"

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs << "-parameters" << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-dependencies:2.6.0'
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.4'
        }
        dependencies {
            dependency 'org.checkerframework:checker-qual:3.19.0'

            dependency 'com.baomidou:mybatis-plus-generator:3.5.1'
            dependencySet(group: "com.baomidou", version: '3.4.3.4') {
                entry "mybatis-plus-boot-starter"
                entry "mybatis-plus-core"
                entry "mybatis-plus-extension"
                entry "mybatis-plus-annotation"
            }

            dependencySet(group: "org.mapstruct", version: '1.4.2.Final') {
                entry "mapstruct"
                entry "mapstruct-processor"
            }

            dependency 'com.alibaba:druid-spring-boot-starter:1.2.8'

            dependency 'io.vavr:vavr:0.10.4'
            dependency 'io.vavr:vavr-jackson:0.10.3'
            dependency 'io.vavr:vavr-test:0.10.3'
            dependency 'io.vavr:vavr-gson:0.10.2'
            dependency 'io.vavr:vavr-beanvalidation2:0.10.0'

            dependency 'commons-io:commons-io:2.11.0'
            dependency 'org.apache.commons:commons-collections4:4.4'
            dependency 'commons-beanutils:commons-beanutils:1.9.4'
            dependency 'commons-fileupload:commons-fileupload:1.4'
            dependency 'commons-net:commons-net:3.8.0'

            dependency 'org.jsoup:jsoup:1.14.3'
            dependency 'org.reflections:reflections:0.10.2'
            dependency 'com.googlecode.libphonenumber:libphonenumber:8.12.36'
            dependency 'org.locationtech.spatial4j:spatial4j:0.8'
            dependency 'com.google.zxing:core:3.4.1'

            dependencySet(group: "org.redisson", version: "3.16.4") {
                entry "redisson"
                entry "redisson-spring-boot-starter"
                entry "redisson-mybatis"
                entry "redisson-spring-data-25"
            }

            dependencySet(group: "cn.hutool", version: "5.7.16") {
                entry "hutool-all"
                entry "hutool-aop"
                entry "hutool-bloomFilter"
                entry "hutool-cache"
                entry "hutool-core"
                entry "hutool-cron"
                entry "hutool-crypto"
                entry "hutool-db"
                entry "hutool-dfa"
                entry "hutool-extra"
                entry "hutool-http"
                entry "hutool-log"
                entry "hutool-script"
                entry "hutool-setting"
                entry "hutool-system"
                entry "hutool-json"
                entry "hutool-captcha"
                entry "hutool-poi"
                entry "hutool-socket"
                entry "hutool-jwt"
            }

        }
    }

    dependencies {
        implementation "org.checkerframework:checker-qual"

        compileOnly "org.slf4j:slf4j-api"

        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.springframework:spring-test"
        testImplementation "org.slf4j:slf4j-api"
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    test {
        useJUnitPlatform()
    }

    compileJava.dependsOn(processResources)

    processResources {
        from('src/main/java') {
            include '**/*.xml'
        }
    }
}
