/*
 *     Copyright 2021-present the original author or authors.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

ext {
    javaVersion = JavaVersion.VERSION_11
    springBootVersion = '2.5.4'
    springCloudVersion = '2020.0.3'
    checkerQualVersion = '3.17.0'
    mybatisPlusVersion = '3.4.3.2'
    knife4jVersion = "3.0.2"
    swaggerAnnotationsVersion = "1.5.22"
    druidVersion = "1.2.6"
    jsoupVersion = "1.13.1"
    zxingVersion = "3.4.1"
    lombokVersion = "1.18.20"
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

configure(subprojects) {
    group = GROUPID
    version = VERSION
}

configure(subprojects) {
    apply plugin: "java-library"
    apply plugin: "io.spring.dependency-management"
    sourceCompatibility = "$javaVersion"
    targetCompatibility = "$javaVersion"
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-dependencies:2.5.4'
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.3'
        }
        dependencies {
            dependencySet(group: "com.baomidou", version: '3.4.3.2') {
                entry "mybatis-plus-boot-starter"
                entry "mybatis-plus-core"
                entry "mybatis-plus-extension"
                entry "mybatis-plus-annotation"
            }
        }
    }

    dependencies {

        implementation "org.checkerframework:checker-qual:$checkerQualVersion"

        compileOnly "org.slf4j:slf4j-api"
        compileOnly "jakarta.servlet:jakarta.servlet-api"

        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.springframework:spring-test"
        testImplementation "org.slf4j:slf4j-api"
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    test {
        useJUnitPlatform()
    }

    compileJava.dependsOn(processResources)
}
