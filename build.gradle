/*
 *     Copyright 2021-present the original author or authors.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

ext {
    javaVersion = JavaVersion.VERSION_11
    springBootVersion = '2.5.0'
    springCloudVersion = '2020.0.3'
    knife4jVersion = "3.0.2"
    swaggerAnnotationsVersion = "1.5.22"
    druidVersion = "1.2.6"
    jsoupVersion = "1.13.1"
    zxingVersion = "3.4.1"
    lombokVersion = "1.18.20"
    findbugsVersion = "3.0.2"
}

configure(subprojects) {
    group = GROUPID
    version = VERSION
}

configure(subprojects) {
    apply plugin: "java-library"
    sourceCompatibility = "$javaVersion"
    targetCompatibility = "$javaVersion"
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
        implementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
        compileOnly "org.slf4j:slf4j-api"
        compileOnly "jakarta.servlet:jakarta.servlet-api"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        compileOnly "com.google.code.findbugs:jsr305:$findbugsVersion"
        testCompileOnly "com.google.code.findbugs:jsr305:$findbugsVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.springframework:spring-test"
        testImplementation "org.slf4j:slf4j-api"
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    test {
        useJUnitPlatform()
    }

    compileJava.dependsOn(processResources)
}
